/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_jnetpcap_packet_JFlowKey */

#ifndef _Included_org_jnetpcap_packet_JFlowKey
#define _Included_org_jnetpcap_packet_JFlowKey
#ifdef __cplusplus
extern "C" {
#endif
/* Inaccessible static: directMemory */
/* Inaccessible static: directMemorySoft */
#undef org_jnetpcap_packet_JFlowKey_MAX_DIRECT_MEMORY_DEFAULT
#define org_jnetpcap_packet_JFlowKey_MAX_DIRECT_MEMORY_DEFAULT 67108864LL
/* Inaccessible static: POINTER */
#undef org_jnetpcap_packet_JFlowKey_FLAG_REVERSABLE
#define org_jnetpcap_packet_JFlowKey_FLAG_REVERSABLE 1L
#undef org_jnetpcap_packet_JFlowKey_FLOW_KEY_PAIR_COUNT
#define org_jnetpcap_packet_JFlowKey_FLOW_KEY_PAIR_COUNT 3L
/*
 * Class:     org_jnetpcap_packet_JFlowKey
 * Method:    sizeof
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_jnetpcap_packet_JFlowKey_sizeof
  (JNIEnv *, jclass);

/*
 * Class:     org_jnetpcap_packet_JFlowKey
 * Method:    equal
 * Signature: (Lorg/jnetpcap/packet/JFlowKey;)Z
 */
JNIEXPORT jboolean JNICALL Java_org_jnetpcap_packet_JFlowKey_equal
  (JNIEnv *, jobject, jobject);

/*
 * Class:     org_jnetpcap_packet_JFlowKey
 * Method:    getFlags
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_jnetpcap_packet_JFlowKey_getFlags
  (JNIEnv *, jobject);

/*
 * Class:     org_jnetpcap_packet_JFlowKey
 * Method:    getHeaderMap
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_jnetpcap_packet_JFlowKey_getHeaderMap
  (JNIEnv *, jobject);

/*
 * Class:     org_jnetpcap_packet_JFlowKey
 * Method:    getId
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_org_jnetpcap_packet_JFlowKey_getId
  (JNIEnv *, jobject, jint);

/*
 * Class:     org_jnetpcap_packet_JFlowKey
 * Method:    getPair
 * Signature: (IZ)J
 */
JNIEXPORT jlong JNICALL Java_org_jnetpcap_packet_JFlowKey_getPair
  (JNIEnv *, jobject, jint, jboolean);

/*
 * Class:     org_jnetpcap_packet_JFlowKey
 * Method:    getPairCount
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_jnetpcap_packet_JFlowKey_getPairCount
  (JNIEnv *, jobject);

/*
 * Class:     org_jnetpcap_packet_JFlowKey
 * Method:    getPairP1
 * Signature: (IZ)I
 */
JNIEXPORT jint JNICALL Java_org_jnetpcap_packet_JFlowKey_getPairP1
  (JNIEnv *, jobject, jint, jboolean);

/*
 * Class:     org_jnetpcap_packet_JFlowKey
 * Method:    getPairP2
 * Signature: (IZ)I
 */
JNIEXPORT jint JNICALL Java_org_jnetpcap_packet_JFlowKey_getPairP2
  (JNIEnv *, jobject, jint, jboolean);

/*
 * Class:     org_jnetpcap_packet_JFlowKey
 * Method:    hashCode
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_jnetpcap_packet_JFlowKey_hashCode
  (JNIEnv *, jobject);

/*
 * Class:     org_jnetpcap_packet_JFlowKey
 * Method:    match
 * Signature: (Lorg/jnetpcap/packet/JFlowKey;)I
 */
JNIEXPORT jint JNICALL Java_org_jnetpcap_packet_JFlowKey_match
  (JNIEnv *, jobject, jobject);

#ifdef __cplusplus
}
#endif
#endif
